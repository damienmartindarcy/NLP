# The problem with valence shifters
# For an analyst, the same sentiment analysis is a pain in the neck because most 
# of the primitive packages/libraries handling sentiment analysis perform 
# a simple dictionary lookup and calculate a final composite score based 
# on the number of occurrences of positive and negative words. 
# But that often ends up in a lot of false positives, with a very obvious case 
# being ‘happy’ vs ‘not happy’ – Negations, in general Valence Shifters.

# What does this package do?
# “sentimentr attempts to take into account valence shifters (i.e., negators, amplifiers (intensifiers), de-amplifiers (downtoners), and adversative conjunctions) while maintaining speed. 
# Simply put, sentimentr is an augmented dictionary lookup. 
# The next questions address why it matters.”

library(sentimentr)

# Average sentiment scoring
sentiment_by('I am not very happy', by = NULL)

# Sentence level scoring
sentiment('I am not very happy. He is very happy')

# Extract sentiment terms
'My life has become terrible since I met you and lost money' %>% extract_sentiment_terms()

# Sentiment Highlighting - separate screen
'My life has become terrible since I met you and lost money. But I still have got a little hope left in me' %>% 
  sentiment_by(by = NULL) %>%
  highlight()

